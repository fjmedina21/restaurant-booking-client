{"version":3,"file":"src_app_table_table_module_ts.js","mappings":"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","sources":["./src/app/table/components/addTable/addTable.component.ts","./src/app/table/components/addTable/addTable.component.html","./src/app/table/components/list-tables/list-tables.component.ts","./src/app/table/components/list-tables/list-tables.component.html","./src/app/table/table-routing.module.ts","./src/app/table/table.module.ts"],"sourcesContent":["import { catchError, of } from 'rxjs';\nimport { Component, Inject, type OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Table } from 'src/app/shared/interfaces/defaultdata.interface';\nimport { TableService } from '../../services/table.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { OkDialogComponent } from 'src/app/shared/components/ok-dialog/ok-dialog.component';\n\n@Component({\n  selector: 'add-table',\n  templateUrl: './addTable.component.html',\n  styleUrls: ['./addTable.component.scss'],\n})\nexport class AddTableComponent implements OnInit {\n\n  disableBtn: boolean = false;\n  isLoading: boolean = false;\n\n  constructor(\n    private dialog: MatDialog,\n    private fb: FormBuilder,\n    private tableService: TableService,\n    public refDialog: MatDialogRef<AddTableComponent>,\n    @Inject(MAT_DIALOG_DATA) public data?: Table,\n  ) { }\n\n  public tableForm: FormGroup = this.fb.group({\n    name: [, Validators.required],\n    capacity: [Validators.required, Validators.min(1)],\n  });\n\n  ngOnInit(): void { }\n\n  submit() {\n    if (!this.tableForm.valid) {\n      const dialogRef = this.dialog.open(OkDialogComponent, { data: { title: \"Invalid Form\", message: '' } });\n      dialogRef.afterClosed().subscribe();\n      this.tableForm.markAllAsTouched();\n      return;\n    }\n\n    this.isLoading = true;\n    this.disableBtn = true;\n    this.tableService.create(this.tableForm.value)\n      .pipe(\n        catchError(({ error }: HttpErrorResponse) => {\n          const dialogRef = this.dialog.open(OkDialogComponent, { data: { title: \"Failed\", message: error.message } });\n          dialogRef.afterClosed().subscribe();\n          this.isLoading = false;\n          return of();\n        })\n      )\n      .subscribe(() => {\n        this.isLoading = false;\n        this.disableBtn = false;\n        this.refDialog.close(true);\n      });\n  }\n\n}\n","<mat-card *ngIf=\"!isLoading\" class=\"mat-card\">\n  <ng-container *ngIf=\"isLoading\">\n    <shared-loading-spinner></shared-loading-spinner>\n  </ng-container>\n  <mat-card-content>\n    <form [formGroup]=\"tableForm\">\n      <ng-container>\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Table 1\"\n            formControlName=\"name\"\n          />\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Capacity</mat-label>\n          <input type=\"number\" matInput formControlName=\"capacity\" />\n        </mat-form-field>\n      </ng-container>\n    </form>\n    ´\n\n    <ng-container>\n      <mat-card-actions>\n        <button\n          mat-raised-button\n          type=\"submit\"\n          class=\"btn\"\n          (click)=\"submit()\"\n          [disabled]=\"disableBtn\"\n        >\n          Save\n        </button>\n      </mat-card-actions>\n    </ng-container>\n  </mat-card-content>\n</mat-card>\n","import { catchError, filter, of, switchMap, tap } from 'rxjs';\nimport { Component, type OnInit } from '@angular/core';\nimport { Table } from 'src/app/shared/interfaces/defaultdata.interface';\nimport { TableService } from '../../services/table.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { OkDialogComponent } from 'src/app/shared/components/ok-dialog/ok-dialog.component';\nimport { AddTableComponent } from '../addTable/addTable.component';\n\n@Component({\n  selector: 'list-tables',\n  templateUrl: './list-tables.component.html',\n  styleUrls: ['./list-tables.component.scss'],\n})\nexport class ListTablesComponent implements OnInit {\n\n  tables!: Table[];\n  isLoading: boolean = false;\n  minDate = new Date().toISOString().split('T')[0];\n  reservationStart!: Date;\n  reservationEnd = this.reservationStart;\n\n  constructor(\n    private tableService: TableService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  private loadData() {\n    this.isLoading = true;\n    this.tableService.getALl()\n      .pipe(\n        tap(tables => this.tables = tables),\n      ).subscribe(() => this.isLoading = false);\n  }\n\n  addTable() {\n    const dialogRef = this.dialog.open(AddTableComponent);\n    dialogRef.afterClosed()\n      .pipe(\n        filter((result: boolean) => result),\n        tap(result => { if (result) this.loadData(); }\n        )\n      ).subscribe();\n  }\n\n  getAvailableTables() {\n    if (!this.reservationStart) {\n      this.dialog.open(OkDialogComponent, { data: { title: \"Date and Time Required\", message: \"Please select a date and time\" } });\n      return;\n    }\n\n    this.reservationStart.setMinutes(this.reservationStart.getMinutes() - this.reservationStart.getTimezoneOffset());\n    this.reservationEnd.setMinutes(this.reservationEnd.getMinutes() - this.reservationEnd.getTimezoneOffset());\n    this.isLoading = true;\n\n    this.tableService.getAvailable(\n      this.reservationStart.toISOString(),\n      this.reservationEnd.toISOString()\n    )\n      .pipe(\n        tap(tables => this.tables = tables),\n      ).subscribe(() => {\n        this.isLoading = false;\n      });\n\n  }\n\n  deleteTable(uid: string) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, { disableClose: true, data: { title: \"Delete\", message: \"Are you sure?\" } });\n    dialogRef.afterClosed()\n      .pipe(\n        filter((result: boolean) => result),\n        tap(result => { if (result) this.isLoading = true; }),\n        switchMap(() => this.tableService.delete(uid)\n          .pipe(\n            catchError(({ error }: HttpErrorResponse) => {\n              this.dialog.open(OkDialogComponent, { data: { title: \"Failed\", message: `${error.message ?? \"Something happend!!\"}` } });\n              this.isLoading = false;\n              return of();\n            }))),\n        filter((wasDeleted: boolean) => wasDeleted),\n        tap(result => { if (result) this.loadData(); })\n      ).subscribe();\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <shared-loading-spinner></shared-loading-spinner>\n</ng-container>\n\n<div *ngIf=\"!isLoading\" class=\"container\">\n  <div class=\"row\">\n    <div class=\"col custom-col\">\n      <ejs-datetimepicker\n        placeholder=\"Choose a date and time\"\n        format=\"dd/MMM/yyyy hh:mm a\"\n        [min]=\"minDate\"\n        [(value)]=\"reservationStart\"\n        class=\"customWidth\"\n      ></ejs-datetimepicker>\n    </div>\n    <div class=\"col custom-col\">\n      <ejs-datetimepicker\n        placeholder=\"Choose a date and time\"\n        format=\"dd/MMM/yyyy hh:mm a\"\n        [min]=\"minDate\"\n        [(value)]=\"reservationEnd\"\n        class=\"customWidth\"\n      ></ejs-datetimepicker>\n    </div>\n  </div>\n  <div class=\"row button-row\">\n    <button (click)=\"getAvailableTables()\" class=\"btn btn-primary\">\n      Get Available Tables\n    </button>\n    <button (click)=\"addTable()\" class=\"btn btn-secondary\">Add Table</button>\n  </div>\n</div>\n<div *ngIf=\"!isLoading\" class=\"table-card-container\">\n\n  <mat-card *ngFor=\"let table of tables\" class=\"table-card\">\n    <mat-card-header>\n      <mat-card-title>Table Details</mat-card-title>\n      <mat-card-subtitle class=\"highlighted-subtitle\">\n        {{ table.name }}\n      </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <h3>Table Info</h3>\n      <p><strong>Table:</strong> {{ table.name }}</p>\n      <p><strong>Capacity:</strong> {{ table.capacity }}</p>\n    </mat-card-content>\n\n    <mat-card-actions>\n      <button mat-button (click)=\"deleteTable(table.tableId)\">Delete</button>\n      <button mat-button disabled>Update</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListTablesComponent } from './components/list-tables/list-tables.component';\nimport { LayoutPageComponent } from '../shared/layout/layout-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutPageComponent,\n    children: [\n      { path: '', component: ListTablesComponent },\n      { path: '**', redirectTo: '/' },\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TableRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TableRoutingModule } from './table-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ListTablesComponent } from './components/list-tables/list-tables.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddTableComponent } from './components/addTable/addTable.component';\nimport { DateTimePickerModule, MaskedDateTimeService } from '@syncfusion/ej2-angular-calendars';\n\n@NgModule({\n  declarations: [\n    ListTablesComponent,\n    AddTableComponent\n  ],\n  imports: [\n    CommonModule,\n    TableRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MaterialModule,\n    FormsModule,\n    DateTimePickerModule\n  ],\n  providers: [MaskedDateTimeService]\n})\nexport class TableModule { }\n"],"names":["catchError","of","Validators","MAT_DIALOG_DATA","OkDialogComponent","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵelementStart","ɵɵtemplate","AddTableComponent_mat_card_0_ng_container_1_Template","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddTableComponent_mat_card_0_Template_button_click_16_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","submit","ɵɵadvance","ɵɵproperty","ctx_r0","isLoading","tableForm","disableBtn","AddTableComponent","constructor","dialog","fb","tableService","refDialog","data","group","name","required","capacity","min","ngOnInit","valid","dialogRef","open","title","message","afterClosed","subscribe","markAllAsTouched","create","value","pipe","error","close","ɵɵdirectiveInject","i1","MatDialog","i2","FormBuilder","i3","TableService","MatDialogRef","selectors","decls","vars","consts","template","AddTableComponent_Template","rf","ctx","AddTableComponent_mat_card_0_Template","filter","switchMap","tap","ConfirmDialogComponent","ListTablesComponent_div_1_Template_ejs_datetimepicker_valueChange_3_listener","$event","_r4","ctx_r3","reservationStart","ListTablesComponent_div_1_Template_ejs_datetimepicker_valueChange_5_listener","ctx_r5","reservationEnd","ListTablesComponent_div_1_Template_button_click_7_listener","ctx_r6","getAvailableTables","ListTablesComponent_div_1_Template_button_click_9_listener","ctx_r7","addTable","ctx_r1","minDate","ListTablesComponent_div_2_mat_card_1_Template_button_click_18_listener","restoredCtx","_r11","table_r9","$implicit","ctx_r10","deleteTable","tableId","ɵɵtextInterpolate1","ListTablesComponent_div_2_mat_card_1_Template","tables","ListTablesComponent","Date","toISOString","split","loadData","getALl","result","setMinutes","getMinutes","getTimezoneOffset","getAvailable","uid","disableClose","delete","wasDeleted","ListTablesComponent_Template","ListTablesComponent_ng_container_0_Template","ListTablesComponent_div_1_Template","ListTablesComponent_div_2_Template","RouterModule","LayoutPageComponent","routes","path","component","children","redirectTo","TableRoutingModule","forChild","imports","exports","CommonModule","MaterialModule","SharedModule","FormsModule","ReactiveFormsModule","DateTimePickerModule","MaskedDateTimeService","TableModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}